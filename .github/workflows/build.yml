name: llvm-build
on: [push]

jobs:
  llvm_clang_lld-13_0_1-x86_64-windows-msvc-release-mt:
    runs-on: windows-2022
    if: "startsWith(github.event.head_commit.message, '[build]')"
    env:
      LLVM_VERSION: '13.0.1'
    steps:
      - name: Use Python 3.10.2
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.2'
      - name: Create artifacts directory
        shell: cmd
        run: |
          pushd .
          cd \
          mkdir llvm+clang+lld-${{ env.LLVM_VERSION }}-x86_64-windows-msvc-release
          cd llvm+clang+lld-${{ env.LLVM_VERSION }}-x86_64-windows-msvc-release
          echo "LLVM_ARTIFACTS=%CD%" >> %GITHUB_ENV%
          popd
      - name: Download llvm-project
        shell: cmd
        run: |
          curl -L -O https://github.com/llvm/llvm-project/releases/download/llvmorg-${{ env.LLVM_VERSION }}/llvm-project-${{ env.LLVM_VERSION }}.src.tar.xz
          7z x llvm-project-${{ env.LLVM_VERSION }}.src.tar.xz -so | 7z x -aoa -si -ttar
      - name: Build llvm+clang+lld
        shell: cmd
        run: |
          pushd .
          cd llvm-project-${{ env.LLVM_VERSION }}.src
          mkdir build
          cd build
          echo "LLVM_ARTIFACTS=${{ env.LLVM_ARTIFACTS }}"
          cmake -G "Visual Studio 17 2022" ^
            -A x64 ^
            -Thost=x64 ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_INSTALL_PREFIX="${{ env.LLVM_ARTIFACTS }}" ^
            -DCMAKE_PREFIX_PATH="${{ env.LLVM_ARTIFACTS }}" ^
            -DLLVM_ENABLE_PROJECTS=clang;lld ^
            -DLLVM_ENABLE_LIBXML2=OFF ^
            ..\llvm
          cmake --build . --config release --target install
          popd .
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: llvm+clang+lld-${{ env.LLVM_VERSION }}-x86_64-windows-msvc-release.zip
          path: ${{ env.LLVM_ARTIFACTS }}
